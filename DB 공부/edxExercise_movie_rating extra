
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
ANS 1) Q5부터

SELECT DISTINCT R1.name, R2.name
FROM (Rating NATURAL JOIN Reviewer) R1 
JOIN (Rating NATURAL JOIN Reviewer) R2
USING(mID)
WHERE R1.name < R2.name



-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
INCORRECT ANS 2)
SELECT name, title, stars
FROM Rating NATURAL JOIN Movie NATURAL JOIN Reviewer
GROUP by(mID)
HAVING min(stars) = stars

답은 아닌데 중요한 부분이 있어서 적어본다. min(stars) = stars 에 주목하자. mID로 group을 짓고 그 무리에서 stars의 최솟값을 가지고 있는 레코드를 찾는다.
aggregation func을 조건에 사용할때는 where로는 불가능하며 오로지 having condition 으로만 작성이 가능하다.


ANS 2)
SELECT name, title, stars
FROM (Rating NATURAL JOIN Movie NATURAL JOIN Reviewer) T
WHERE not EXISTS (SELECT rID FROM Rating WHERE 
stars < T.stars) 

EXIST는 어떠한 필드값에 구애받지않고 subquery의 결과가 존재하느냐 존재하지 않느냐에만 초점을 맞추므로 where atb EXISTS (sub-query) 형태로 사용하지않는다.



-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
ANS 3)
SELECT title, avg(stars) as st
FROM Movie NATURAL JOIN Rating NATURAL JOIN Reviewer
GROUP by(mID)
ORDER by st DESC, title


-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
ANS 4)


-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
ANS 5)
SELECT title,director 
FROM Movie
WHERE director in
(SELECT director
FROM Movie M1 JOIN Movie M2
USING(director)
WHERE M1.title < M2.title) 
ORDER by director, title


count 함수 없이 2개 이상 영화를 제작한 감독의 이름과 영화제목을 출력하는 문제

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
ANS 6)

첫번째 오답)-------------------------------------------------------------
SELECT title, max(st)
FROM (SELECT mID, avg(stars) as st, title
FROM Rating NATURAL JOIN Movie
GROUP by(mID));

SELECT mID, avg(stars) as st, title
FROM Rating NATURAL JOIN Movie
GROUP by(mID)

의 결과는

mID	st	title
101	3.0	Gone with the Wind
103	2.5	The Sound of Music
104	2.5	E.T.
106	4.5	Snow White
107	4.0	Avatar
108	3.33333333333333	Raiders of the Lost Ark

이다.

이 테이블에서 aggregation 함수인 max(st)를 select문에 사용하면 해당 테이블에서 st의 최댓값을 가지고있는 레코드를 반환한다.
즉, 다시 말해서 aggregation 함수를 사용할때 group by가 항상 필요한 것은 아니라는 점에 명시하자.
--------------------------------------------------------------------------

위의 오답에 대해 고쳐야할 생각이 있다. -     중요!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
1. aggregation 함수는 group by가 항상 와야되는 것은 아니지만, select 구문에서 max, min 같은 최대/최소 함수를 사용하면 결과는 오로지 하나로만 출력된다.
즉, 최대값을 가지고있는 튜플이 두개인데 그 중 하나만 출력된다는 의미이다.

2. 따라서 aggregation 함수를 select문에 쓸 때는 결과값이 오로지 하나만 출력되는 것이 허용될때 사용하는 것이 바람직하다.

3. 결과적으로 다음과 같이 max, min값을 먼저 알아낸 다음 해당 값과 동일한 값을 가지고 있는 튜플들을 검색해야한다.

SELECT title, st
from (SELECT mID, avg(stars) as st, title
FROM Rating NATURAL JOIN Movie
GROUP by(mID))
WHERE st in
(SELECT max(st)
FROM (SELECT mID, avg(stars) as st, title
FROM Rating NATURAL JOIN Movie
GROUP by(mID)))


- SELECT mID, avg(stars) as st, title
FROM Rating NATURAL JOIN Movie
GROUP by(mID)

이 쿼리는 영화별로 그룹을 묶고 평가들의 별점을 평균으로 출력한 결과 쿼리이다.

- SELECT max(st)
FROM (SELECT mID, avg(stars) as st, title
FROM Rating NATURAL JOIN Movie
GROUP by(mID))

이렇게 하면 영화별 평균 평점 중에서 최댓값을 찾아낸다.

- from (영화별 평균 평점 리스트)
WHERE st in
(영화별 평균 평점 max값)

영화별 평균 평점 리스트에서 해당 max값을 갖는 튜플을 찾아서 결과를 구한다.


-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
ANS 7)
SELECT title, st
from (SELECT mID, avg(stars) as st, title
FROM Rating NATURAL JOIN Movie
GROUP by(mID))
WHERE st in
(SELECT min(st)
FROM (SELECT mID, avg(stars) as st, title
FROM Rating NATURAL JOIN Movie
GROUP by(mID)))


ANS 6과 형식은 동일하되, 최솟값의 경우에 해당한다. 이 경우 결과 튜플이 두개가 나와야되는데 처음 오답을 max -> min으로 바꿨을때 하나만 나와서 문제가 무엇인지 파악할 수 있었다.

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
ANS 8)
SELECT director, title, max(stars)
FROM Movie NATURAL JOIN Rating
GROUP by(director)
HAVING director is not NULL

해당 쿼리는 감독마다 제작한 영화의 평가 점수가 가장 높은 영화와 그 점수를 출력하는 쿼리이다. mID가 아니라, director로 그룹을 지으면 영화별로가 아닌 감독이름별로 그룹이
분리되므로 이를 이용해야한다.

참고로 group by와 where는 같은 쿼리안에서 항상 사용이 불가능한듯.

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
