HighSchooler
ID	name	grade
1381	Tiffany	9
1510	Jordan	9
1689	Gabriel	9
1709	Cassandra	9
1101	Haley	10
1468	Kris	10
1641	Brittany	10
1782	Andrew	10
1247	Alexis	11
1316	Austin	11
1501	Jessica	11
1911	Gabriel	11
1025	John	12
1304	Jordan	12
1661	Logan	12
1934	Kyle	12

Friend
ID1	ID2
1510	1381
1510	1689
1689	1709
1381	1247
1709	1247
1689	1782
1782	1468
1782	1316
1782	1304
1468	1101
1468	1641
1101	1641
1247	1911
1247	1501
1911	1501
1501	1934
1316	1934
1934	1304
1304	1661
1661	1025
1381	1510
1689	1510
1709	1689
1247	1381
1247	1709
1782	1689
1468	1782
1316	1782
1304	1782
1101	1468
1641	1468
1641	1101
1911	1247
1501	1247
1501	1911
1934	1501
1934	1316
1304	1934
1661	1304
1025	1661

Likes
ID1	ID2
1689	1709
1709	1689
1782	1709
1911	1247
1247	1468
1641	1468
1316	1304
1501	1934
1934	1501
1025	1101



--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
SQL 1)
Find the names of all students who are friends with someone named Gabriel.

SELECT name
FROM HighSchooler
WHERE ID in (SELECT ID2
FROM Friend,
(SELECT *
FROM HighSchooler
WHERE name = "Gabriel")
WHERE ID1 = ID
UNION
SELECT ID1
FROM Friend,
(SELECT *
FROM HighSchooler
WHERE name = "Gabriel")
WHERE ID2 = ID)


결과)
Alexis
Jessica
Jordan
Cassandra
Andrew


포인트)
FROM Friend,
(SELECT *
FROM HighSchooler
WHERE name = "Gabriel")
WHERE ID1 = ID

먼저 Gabriel이라는 이름을 가진 학생의 ID값을 Highschooler에서 알아내고 friend와 product를 취한다. 
이때 Friend 테이블의 필드는 ID1, ID2이므로 Gabriel에 해당하는 ID값이 ID1에 있을지, ID2에 있을지 알 수 없다.
따라서 ID1 이 Gabriel ID와 같을때와 ID2와 같을때의 상황을 분리하여 쿼리를 수행하고 다시 종합(UNION)을 수행한다.
결과적으로

(SELECT ID2
FROM Friend,
(SELECT *
FROM HighSchooler
WHERE name = "Gabriel")
WHERE ID1 = ID
UNION
SELECT ID1
FROM Friend,
(SELECT *
FROM HighSchooler
WHERE name = "Gabriel")
WHERE ID2 = ID)

이 subquery에서 얻는 값은 Gabriel과 친구인 ID값이고 이를 다시 Highschooler에서 탐색하여 name값으로 변환해야하면 원하는 결과값을 얻는다.


--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
SQL 2)






--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
SQL )






--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
SQL )






--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
SQL )





--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
SQL )





--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
SQL )





--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
SQL )





--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
SQL )






--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
SQL )






















